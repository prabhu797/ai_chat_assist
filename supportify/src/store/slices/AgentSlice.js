import { createSlice } from "@reduxjs/toolkit";

/**
 * Initial state of the project slice.
 * @type {Object}
 * @property {string} agentName - The name of the project.
 * @property {string} agentEmail - The email of the agent.
 * @property {boolean} isAvailable - Availability status of the agent.
 * @property {boolean} isAdmin - Whether the agent is an admin.
 */
const initialState = {
    agentName: "",
    agentEmail: "",
    isAvailable: 0,
    isAdmin: 0,
    agentDisplayName: ""
};

/**
 * Slice for managing project-related state.
 * @type {Object}
 * @property {string} name - The name of the slice.
 * @property {Object} initialState - The initial state of the slice.
 * @property {Object} reducers - The reducers for handling actions.
 */
export const AgentSlice = createSlice({
    name: 'Agent', // Name of the slice, changed to reflect the context
    initialState, // Initial state of the slice
    reducers: {
        /**
         * Sets the agent's name in the state.
         * @param {Object} state - The current state.
         * @param {Object} action - The action object containing the payload.
         * @param {string} action.payload - The new agent name to set.
         */
        setAgentName: (state, action) => {
            state.agentName = action.payload;
        },
        setAgentEmail: (state, action) => {
            state.agentEmail = action.payload;
        },
        setAgentAvailability: (state, action) => {
            state.isAvailable = action.payload;
        },
        setAgentAdminStatus: (state, action) => {
            state.isAdmin = action.payload;
        },
        setAgentDisplayName: (state, action) => {
            state.agentDisplayName = action.payload;
        },
        resetAgentState: (state) => {
            state.agentName = "";
            state.agentEmail = "";
            state.isAvailable = 0;
            state.isAdmin = 0;
            state.agentDisplayName = "";
        }
    },
});

// Export the action creators generated by createSlice
export const { 
    setAgentName, 
    setAgentEmail, 
    setAgentAvailability, 
    setAgentAdminStatus, 
    setAgentDisplayName,
    resetAgentState 
} = AgentSlice.actions;

/**
 * The reducer function for the AgentSlice.
 * @type {function} - The reducer function to be used in the store.
 */
export default AgentSlice.reducer;
